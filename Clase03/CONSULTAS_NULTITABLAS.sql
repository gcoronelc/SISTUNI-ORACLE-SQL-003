-- ====================================
-- OPERADOR JOIN
-- ====================================

/*
Ejemplo 01
Consultar los empleados con sus respectivos
nombre de su puesto de trabajo y el
nombre del departamento donde laboran.
Esquema: RECURSOS
*/

SELECT COUNT(*) FROM RECURSOS.EMPLEADO;

SELECT 
  EM.IDEMPLEADO, EM.APELLIDO, EM.NOMBRE,
  CA.NOMBRE CARGO, DE.NOMBRE DEPARTAMENTO
FROM RECURSOS.CARGO CA
JOIN RECURSOS.EMPLEADO EM USING (IDCARGO)
JOIN RECURSOS.DEPARTAMENTO DE USING (IDDEPARTAMENTO);

/*
Ejercicio 1
Desarrollar una consulta para obtener los siguiemtes
datos de las cuentas ahorro:
- Número de cuenta
- Saldo
- Nombre del cliente
- Nombre de la sucursal
- Nombre del empleado que creo la cuenta
- Nombre de la moneda
Esquema EUREKA
*/


/*
Ejemplo 02
Consultar los empleados con sus respectivos
nombre de su puesto de trabajo y el
nombre del departamento donde laboran.
Esquema: RECURSOS
*/

SELECT COUNT(*) FROM RECURSOS.EMPLEADO;

SELECT 
  EM.IDEMPLEADO, EM.APELLIDO, EM.NOMBRE,
  CA.NOMBRE CARGO, DE.NOMBRE DEPARTAMENTO
FROM RECURSOS.CARGO CA
JOIN RECURSOS.EMPLEADO EM 
ON CA.IDCARGO = EM.IDCARGO
JOIN RECURSOS.DEPARTAMENTO DE 
ON EM.IDDEPARTAMENTO = DE.IDDEPARTAMENTO;

/*
Ejemplo 03
Cuantos empleados hay por departamento.
*/

SELECT 
  DE.NOMBRE DEPARTAMENTO,
  count(*) EMPLEADOS
FROM RECURSOS.EMPLEADO EM 
JOIN RECURSOS.DEPARTAMENTO DE 
ON EM.IDDEPARTAMENTO = DE.IDDEPARTAMENTO
GROUP BY DE.NOMBRE;


/*
Ejemplo 04
Se necesita saber cuantos trabajadores existen por
departamento. El resultado debe considerar a
todos los departamentos.
*/

SELECT 
  DE.NOMBRE DEPARTAMENTO,
  COUNT(EM.IDDEPARTAMENTO) EMPLEADOS
FROM RECURSOS.EMPLEADO EM 
RIGHT JOIN RECURSOS.DEPARTAMENTO DE 
ON EM.IDDEPARTAMENTO = DE.IDDEPARTAMENTO
GROUP BY DE.NOMBRE;


SELECT 
  DE.NOMBRE DEPARTAMENTO,
  SUM(NVL2(EM.IDDEPARTAMENTO,1,0)) EMPLEADOS
FROM RECURSOS.EMPLEADO EM 
RIGHT JOIN RECURSOS.DEPARTAMENTO DE 
ON EM.IDDEPARTAMENTO = DE.IDDEPARTAMENTO
GROUP BY DE.NOMBRE;


/*
EJERCICIO 2
Del esquema EDUCA se necesita un reporte 
recumen de las matriculas y pagos de los alumnos.
Las columnas del reporte que se deben considerar
son:
- codigo del curso.
- nombre del curso.
- cantidad de matriculados.
- importe comprometido a pagar por los alumnos (COMPROMISO)
- importe pago por los alumnos (RECAUDACION)

COD-CUR   NOMBRE    ALUMNOS   COMPROMISO   RECAUDACION
------------------------------------------------------------------
C001      Aaaaaa      4        6578.89
C002      Bbbbbb      5
C003  
*/

SELECT 
  CU.CUR_ID, CU.CUR_NOMBRE,
  COUNT(DISTINCT MA.ALU_ID) ALUMNOS,
  SUM(DISTINCT MA.MAT_PRECIO) COMPROMISO,
  SUM(NVL(PA.PAG_IMPORTE,0)) RECAUDACION
FROM EDUCA.CURSO CU
JOIN EDUCA.MATRICULA MA ON CU.CUR_ID = MA.CUR_ID
LEFT JOIN EDUCA.PAGO PA 
ON MA.CUR_ID = PA.CUR_ID AND MA.ALU_ID = PA.ALU_ID
GROUP BY CU.CUR_ID, CU.CUR_NOMBRE;

-- ====================================
-- APLICANDO WITH
-- ====================================

WITH 
V1 AS ( SELECT CUR_ID, SUM(MAT_PRECIO) COMPROMISO
        FROM EDUCA.MATRICULA GROUP BY CUR_ID),
V2 AS ( SELECT CUR_ID, SUM(PAG_IMPORTE) RECAUDACION
        FROM EDUCA.PAGO GROUP BY CUR_ID)
SELECT 
  CU.CUR_ID, CU.CUR_NOMBRE, CU.CUR_MATRICULADOS,
  V1.COMPROMISO, NVL(V2.RECAUDACION,0) RECAUDACION
FROM EDUCA.CURSO CU 
JOIN V1 ON CU.CUR_ID = V1.CUR_ID
LEFT JOIN V2 ON CU.CUR_ID = V2.CUR_ID;


-- ====================================
-- SELF - JOIN
-- ====================================

SELECT 
  EM.IDEMPLEADO, EM.APELLIDO, EM.NOMBRE,
  JE.IDEMPLEADO JEFE_ID, 
  JE.APELLIDO || ', ' || JE.NOMBRE JEFE_NOMBRE
FROM RECURSOS.EMPLEADO EM 
JOIN RECURSOS.EMPLEADO JE
ON EM.JEFE = JE.IDEMPLEADO;

-- ====================================
-- OPERADOR UNION
-- ====================================

SELECT 'RECURSOR' FUENTE,
  EM.IDEMPLEADO, EM.APELLIDO || ', ' || EM.NOMBRE NOMBRE
FROM RECURSOS.EMPLEADO EM 
UNION
SELECT 'SCOTT', TO_CHAR(EMPNO), ENAME 
FROM SCOTT.EMP;


-- ====================================
-- SUBCONSULTAS
-- ====================================

SELECT 
  CU.CUR_ID, CU.CUR_NOMBRE, CU.CUR_MATRICULADOS,
  V1.COMPROMISO, NVL(V2.RECAUDACION,0) RECAUDACION
FROM EDUCA.CURSO CU 
JOIN ( SELECT CUR_ID, SUM(MAT_PRECIO) COMPROMISO
        FROM EDUCA.MATRICULA GROUP BY CUR_ID) V1 
ON CU.CUR_ID = V1.CUR_ID
LEFT JOIN ( SELECT CUR_ID, SUM(PAG_IMPORTE) RECAUDACION
        FROM EDUCA.PAGO GROUP BY CUR_ID) V2 
ON CU.CUR_ID = V2.CUR_ID;


/*
Ejemplo
Se necesita saber quienes tienen el salario
mayor al salario promedio.
ESQUEMA: RECURSOS
*/

SELECT 
  EM.*,
  (SELECT AVG(SUELDO) FROM RECURSOS.EMPLEADO) SUELDO_PROM
FROM RECURSOS.EMPLEADO EM 
WHERE EM.SUELDO > (SELECT AVG(SUELDO) FROM RECURSOS.EMPLEADO);


-- OTRA FORMA

WITH 
V1 AS ( SELECT ROUND(AVG(SUELDO),2) SUELDO_PROM FROM RECURSOS.EMPLEADO )
SELECT 
  EM.*,
  V1.SUELDO_PROM
FROM RECURSOS.EMPLEADO EM, V1 
WHERE EM.SUELDO > V1.SUELDO_PROM;



-- =========================================
-- APLICANDO SUBCONSULTA CORRELACIONADA
-- =========================================

SELECT 
  CU.CUR_ID, CU.CUR_NOMBRE, CU.CUR_MATRICULADOS,
  NVL( (SELECT SUM(MA.MAT_PRECIO) FROM EDUCA.MATRICULA MA
    WHERE MA.CUR_ID = CU.CUR_ID), 0 ) COMPROMISO,
  NVL( (SELECT SUM(PA.PAG_IMPORTE) FROM EDUCA.PAGO PA
    WHERE PA.CUR_ID = CU.CUR_ID), 0 ) RECAUDACION
FROM EDUCA.CURSO CU;



